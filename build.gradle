plugins {
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

project.ext {
    publishRepo = "https://maven.pkg.github.com/reportportal/service-jobs"
    releaseMode = project.hasProperty("releaseMode")
}

ext['junit-jupiter.version'] = '5.10.0'

def scriptsUrl = 'https://raw.githubusercontent.com/reportportal/gradle-scripts/' + (releaseMode ? '5.14.0' : 'develop')

apply from: "$scriptsUrl/build-commons.gradle"
apply from: "$scriptsUrl/build-info.gradle"
apply from: "$scriptsUrl/release-service.gradle"
apply from: "$scriptsUrl/signing.gradle"

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

wrapper {
    gradleVersion = '8.10.2'
}

bootJar {
    project.hasProperty('gcp') ? getArchiveFileName().set('app.jar') : archiveClassifier.set('exec')
}
jar.enabled(true)
jar.archiveClassifier.set('')

repositories {
    mavenCentral { url "https://repo1.maven.org/maven2" }
    maven { url 'https://repo.spring.io/libs-milestone' }
    maven { url 'https://jitpack.io' }
}

processResources {
    dependsOn(gitInfo)
    filesMatching('application.properties') {
        expand(project.properties)
    }
}

ext['log4j2.version'] = '2.21.1'
ext['log4j-to-slf4j.version'] = '2.21.1'
ext['postgresql.version'] = '42.6.1'
ext['snakeyaml.version'] = '2.2'
ext['spring-boot.version'] = '3.4.4'

dependencies {

    implementation 'org.json:json:20231013'
    implementation 'net.javacrumbs.shedlock:shedlock-spring:5.16.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.46.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //Fix CVE-2025-24813
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.40'
    implementation 'org.apache.tomcat.embed:tomcat-embed-el:10.1.40'
    implementation 'org.apache.tomcat.embed:tomcat-embed-websocket:10.1.40'

    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'
    implementation 'org.springframework:spring-webmvc'
    implementation 'org.springframework:spring-web'
    implementation 'org.apache.commons:commons-compress:1.26.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    implementation 'org.springframework.amqp:spring-amqp'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.apache.jclouds.api:s3:2.5.0'
    implementation 'org.apache.jclouds.provider:aws-s3:2.5.0'
    implementation 'org.apache.jclouds.api:filesystem:2.5.0'
    //Needed for correct jcloud work
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation ('org.apache.httpcomponents:httpclient:4.5.14') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation 'com.google.guava:guava:32.1.3-jre'

    implementation "com.rabbitmq:http-client:5.2.0"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.4'

    implementation 'software.amazon.awssdk:aws-core:2.29.50'
    implementation 'software.amazon.awssdk:sts:2.29.50'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'net.bytebuddy:byte-buddy:1.14.5'
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.14.5'

}

test {
    useJUnitPlatform()
}

publish.dependsOn build
publish.mustRunAfter build

tasks.preTagCommit.enabled = false
tasks.updateVersion.enabled = false
tasks.commitNewVersion.enabled = false
